name: Deploy Server Service

on:
  push:
    branches:
      - main  # main 브랜치에 푸시될 때만 워크플로우 실행

jobs:
  build-and-deploy:
    name: Build & Deploy
    runs-on: ubuntu-latest
    environment: deploy
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Server image
        run: |
          docker buildx build --platform linux/amd64 \
            -t ${{ secrets.DOCKER_USERNAME }}/skaxis-server:latest \
            --push .

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          port: ${{ secrets.EC2_PORT }}
          script: |
            cd /home/ec2-user/SK-AXIS-SERVER

            if [ -f ".env" ]; then
              echo "[✓] .env 파일 존재 확인됨. 배포를 계속합니다."
            else
              echo "[⚠] .env 파일이 없습니다. 배포가 실패할 수 있습니다."
            fi

            echo "== Docker 이미지 풀 및 배포 시작 =="
            docker pull ${{ secrets.DOCKER_USERNAME }}/skaxis-server:latest

            docker stop sk-axis-springboot || true
            docker rm sk-axis-springboot || true

            docker run -d --name sk-axis-springboot -p 8080:8080 --restart always ${{ secrets.DOCKER_USERNAME }}/skaxis-server:latest

            docker image prune -f
            echo "=== 업데이트 완료! ==="
